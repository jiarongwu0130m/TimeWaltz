@{
    ViewBag.title = "加班申請單";
}

<div class="secion mt-2" id="app">
    <div class="card">
        <div class="card-header">

            <h3 class="card-title d-flex justify-content-between">
                <span>加班申請</span>
            </h3>

        </div>
        <div class="card-body">
            <div class="row form-group basic">
                <label class="col-form-label">申請人</label>
                <input type="text" class="form-control" v-model="name" readonly>

                <i class="clear-input">
                    <ion-icon name="close-circle" role="img" class="md hydrated" aria-label="close circle"></ion-icon>
                </i>
            </div>
            <div class="row form-group basic">
                <label class="col-form-label">加班期間</label>
                <Vue-Date-Picker v-model="dateRange" autocomplete="off" class="form-control" model-auto range @@change="change"></Vue-Date-Picker>
                <i class="clear-input">
                    <ion-icon name="close-circle" role="img" class="md hydrated" aria-label="close circle"></ion-icon>
                </i>
                <span class="text-danger font-weight-bold col-form-label" v-if="!dataValid.overtimeResult">請選擇加班期間</span>
            </div>
            <template v-if="isValid(startTime)">
                <div class="row form-group basic">
                    <div class="chip chip-media">
                        <i class="chip-icon bg-warning">
                            <ion-icon name="alarm" role="img" class="md hydrated" aria-label="alarm"></ion-icon>
                        </i>
                        <span class="chip-label">加班時數：{{ overtimeResult }}</span>
                    </div>
                </div>
            </template>
            <div class="row form-group basic">
                <div class="custom-control custom-checkbox mb-1">
                    <input type="checkbox" class="custom-control-input" id="ovetimeCheck" v-model="status">
                    <label class="custom-control-label" for="ovetimeCheck">加班轉補休</label>
                </div>
            </div>
            <div class="row form-group basic">
                <label class="col-form-label">加班原因</label>
                <textarea class="form-control" rows="3"
                          control-id="ControlID-13" v-model="reason"></textarea>
                <i class="clear-input">
                    <ion-icon name="close-circle" role="img" class="md hydrated" aria-label="close circle"></ion-icon>
                </i>
                <span class="text-danger font-weight-bold" v-if="!dataValid.reason">請說明加班原因</span>
            </div>
        </div>
        <div class="card-footer">
            <div class="row justify-content-around">
                <button type="button" class="btn btn-facebook" @@click="checkAllData">
                    <ion-icon name="checkmark-done-outline" role="img"
                              class="md hydrated" aria-label="checkmark done outline"></ion-icon>送出
                </button>
                <button type="button" class="btn btn-dribbble" @@click="toList">
                    <ion-icon name="close-outline" role="img"
                              class="md hydrated" aria-label="close outline"></ion-icon>瀏覽單據
                </button>
            </div>
        </div>
    </div>


    <div class="modal fade dialogbox" id="DialogIconedSuccess" data-backdrop="static" tabindex="-1" role="dialog" style="display: none;" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-icon text-success">
                    <ion-icon name="checkmark-circle" role="img" class="md hydrated" aria-label="checkmark circle"></ion-icon>
                </div>
                <div class="modal-header">
                    <h5 class="modal-title">送出成功</h5>
                </div>
                <div class="modal-body">
                </div>
                <div class="modal-footer">
                    <div class="btn-inline">
                        <a href="#" class="btn" data-dismiss="modal" id="successBack">返回</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade dialogbox" id="DialogIconedDanger" data-backdrop="static" tabindex="-1" role="dialog" style="display: none;" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-icon text-danger">
                    <ion-icon name="close-circle" role="img" class="md hydrated" aria-label="close circle"></ion-icon>
                </div>
                <div class="modal-header">
                    <h5 class="modal-title">送出失敗</h5>
                </div>
                <div class="modal-body">
                </div>
                <div class="modal-footer">
                    <div class="btn-inline">
                        <a href="#" class="btn" data-dismiss="modal" id="dangerBack">返回</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.30.1/moment.min.js"></script>
    <script>
        Vue.createApp({
            data() {
                return {
                    approvalEmployeeList: [],
                    dateRange: [],
                    approvalEmployeeId: null,
                    employeeId: '',
                    name: '',
                    startTime: '',
                    endTime: '',
                    overtimeResult: '',
                    status: false,
                    reason: '',
                    dataValid: {
                        overtimeResult: true,
                        reason: true,
                    }
                }
            },
            methods: {
                getApprovalDropDownList() {
                    let self = this;
                    axios("/mobile/EmployeeApi/GetApprovalList").then((response) => {
                        self.approvalEmployeeList = response.data
                    }).catch((error) => console.log(error));
                },
                change() {
                    let self = this;
                    self.startTime = self.dateRange[0]
                    self.endTime = self.dateRange[1]
                    this.countOvertimeMins()
                },
                toList() {
                    location.href = '/employee/query/overtime'
                },
                getEmpName() {
                    let self = this;
                    axios("/mobile/api/Overtime/GetEmployeeName").then(response => {
                        self.employeeId = response.data.employeeId;
                        self.name = response.data.employeeName;
                    });
                },
                countOvertimeMins() {
                    let self = this;
                    console.log(self.startTime, self.endTime)
                    self.overtimeResult = '';
                    if (self.startTime && self.endTime) {
                        const start = self.dateRange[0];
                        const end = self.dateRange[1];
                        const durationmilliseconds = end - start;
                        const durationminutes = Math.floor(durationmilliseconds / (60 * 1000));
                        const hours = Math.floor(durationminutes / 60);
                        const minutes = durationminutes % 60;
                        if (hours === 0) {
                            self.overtimeResult = `${minutes} 分鐘`;
                        } else if (minutes === 0) {
                            self.overtimeResult = `${hours} 小時`;
                        } else {
                            self.overtimeResult = `${hours} 小時 ${minutes} 分鐘`;
                        }
                    } else {
                        self.overtimeResult = '';
                    }
                },
                isValid(string) {
                    const isValidData = Date.parse(string);
                    return !isNaN(isValidData);
                },
                checkAllData() {
                    let self = this;
                    self.dataValid.overtimeResult = self.overtimeResult == '' ? false : true;
                    self.dataValid.reason = self.reason == '' ? false : true;
                    if (self.dataValid.overtimeResult && self.dataValid.reason) {
                        self.sendOvertimeRequest();
                    }
                },
                sendOvertimeRequest() {
                    let self = this;
                    self.startTime = moment(this.timeRange[0]).format('YYYY-MM-DD')
                    self.endTime = moment(this.timeRange[1]).format('YYYY-MM-DD')
                    console.log(self.startTime, self.endTime)
                    axios.post("/mobile/api/Overtime/RequestCreate", {
                        employeeId: self.employeeId,
                        startTime: new moment(self.startTime).format('YYYY-MM-DDTHH:mm:ss').toString(),
                        endTime: new moment(self.endTime).format('YYYY-MM-DDTHH:mm:ss').toString(),
                        status: self.status,
                        reason: self.reason,
                        approvalEmployeeId: self.approvalEmployeeId,
                        overtimeResult: self.overtimeResult,
                    }).then(response => {
                        if (response.data == true) {
                            $('#DialogIconedSuccess').modal('show');
                            $('#successBack').click(function () {
                                $('#DialogIconedSuccess').modal('hide');
                                window.location.href = "/employee/query/Overtime";
                            });
                        } else {
                            $('#DialogIconedDanger').modal('show');
                            $('#dangerBack').click(function () {
                                $('#DialogIconedDanger').modal('hide');
                            });
                        }
                    });
                },
                toList() {
                    location.href = "/employee/query/Overtime";
                },
            },
            mounted() {
                this.getEmpName();
            },
        }).component('VueDatePicker', VueDatePicker).mount("#app");
    </script>
}
