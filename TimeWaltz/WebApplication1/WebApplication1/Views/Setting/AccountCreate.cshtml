@{
    Layout = "_Layout";
    ViewBag.title = "帳號設定 | ";
}

<div class="content-header">
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-6">
                <h1 class="m-0">帳號新增</h1>
            </div>
        </div>
    </div>
</div>
<section id="app" class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <form action="/Setting/AccountCreate" method="post">
                        <div class="card-body">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="Account" class="control-label">帳號</label>
                                    <input id="Account" class="form-control" v-model="info.Account" required/>
                                    <span class="text-danger" v-if="validation.Account">帳號不得為空</span>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="Password" class="control-label">密碼</label>
                                    <input id="Password" type="password" class="form-control" v-model="info.Password" required />
                                    <span class="text-danger" v-if="validation.Password">密碼不得為空</span>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="EmployeesName" class="control-label">姓名</label>
                                    <input id="EmployeesName" class="form-control" v-model="info.EmployeesName" required />
                                    <span class="text-danger" v-if="validation.EmployeesName">姓名不得為空</span>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="DepartmentName" class="control-label">單位</label>
                                    <select id="DepartmentName" class="form-control" v-model.number="info.DepartmentName" required>
                                        <option value="-1" disabled>請選擇</option>
                                        <option v-for="item in department" :value="item.value">{{item.text}}</option>
                                    </select>
                                    <span class="text-danger" v-if="validation.DepartmentName">單位不得為空</span>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="Stop" class="control-label">啟用/停用</label>
                                    <select id="Stop" class="form-control" v-model="info.Stop">
                                        <option value="false">啟用</option>
                                        <option value="true">停用</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="card-footer">
                            <input id="select" type="button" class="btn btn-primary" value="新增" @@click="createAccount" />
                            <a href="/Setting/Account" class="btn btn-outline-dark">返回</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>


@section Scripts
{
    <script>
        const app = Vue.createApp({
            data() {
                return {
                    department: [],
                    validation: {
                        Account: false,
                        Password: false,
                        EmployeesName: false,
                        DepartmentName: false,
                    },
                    info: {
                        Account: "",
                        Password: "",
                        EmployeesName: "",
                        DepartmentName: -1,
                        Stop: "false"
                    }

                }
            },
            watch: {
                'info.Account'(nval) { this.validation.Account = nval == "" },
                'info.Password'(nval) { this.validation.Password = nval == "" },
                'info.EmployeesName'(nval) { this.validation.EmployeesName = nval == "" },
                'info.DepartmentName'(nval) { this.validation.DepartmentName = nval == -1 },
            },
            computed: {
            },
            methods: {
                validationForm() {
                    if (this.info.Account == "") { this.validation.Account = true; return false; }
                    if (this.info.Password == "") { this.validation.Password = true; return false; }
                    if (this.info.EmployeesName == "") { this.validation.EmployeesName = true; return false; }
                    if (this.info.DepartmentName == -1) { this.validation.DepartmentName = true; return false; }
                    return true;
                },
                getDepartmentDropDownList() {
                    let self = this;
                    axios('/api/DepartmentApi/GetAll').then(res => {
                        console.log(res.data);
                        self.department = res.data;
                    })
                },
                createAccount() {
                    if (this.validationForm()) {
                        this.info.Stop = this.info.Stop == "true";
                        axios.post('/api/Setting/AccountCreate', this.info).then(res => { 
                            if (res.data.status) {
                                Swal.fire({
                                    icon: "success",
                                    title: "新增成功!",
                                    confirmButtonText: '返回',
                                    showClass: {
                                        popup: "animate__animated animate__fadeInUp animate__faster"
                                    },
                                    hideClass: {
                                        popup: "animate__animated animate__fadeOutDown animate__faster"
                                    }
                                }).then((result) => {
                                    if (result.value) {
                                        location.href = "/setting/account";
                                    }
                                });
                            } else {
                                Swal.fire({
                                    icon: "error",
                                    title: "新增失敗!",
                                    text: res.data.msg,
                                    confirmButtonText: '返回',
                                    showClass: {
                                        popup: "animate__animated animate__fadeInUp animate__faster"
                                    },
                                    hideClass: {
                                        popup: "animate__animated animate__fadeOutDown animate__faster"
                                    }
                                });
                            }
                            
                        })
                    }                    
                }
            },
            mounted() {
                this.getDepartmentDropDownList();
            }
        }).mount('#app')
    </script>
}

