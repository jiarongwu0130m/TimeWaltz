@{
    Layout = "_Layout";
    ViewData["Title"] = "特殊假日設定 | ";
}

<div class="content-header">
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-6">
                <h1 class="m-0">特殊假日一覽</h1>
            </div>
        </div>
    </div>
</div>
<section class="content">
    <div class="container-fluid">
        <div class="row" id="app">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">
                            <div class="row">
                                <div class="col">
                                    <div class="form-group">
                                        <label name="Date">時間區間查詢</label>
                                        <input name="Date" class="form-control" id="dateInput">
                                    </div>
                                </div>
                            </div>
                        </h3>
                        <div class="card-tools">
                            <div class="input-group">
                                <div class="input-group-append">
                                    <a asp-controller="BasicSetting" asp-action="specialVacationCreate" class="btn btn-outline-success">新增</a>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-body table-responsive p-0">
                        <table class="table table-hover text-nowrap">
                            <thead>
                                <tr>
                                    <th>
                                        特殊假日名稱
                                    </th>
                                    <th>
                                        日期
                                    </th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr v-for="item in filterDate">
                                    <td>
                                        {{item.specialVacationName}}
                                    </td>
                                    <td>
                                        {{item.date}}
                                    </td>
                                    <td>
                                        <a href="#" @@click="edit(item.id, $event)" class="btn btn-outline-primary">編輯</a>
                                        <a href="#" @@click="checkIsDelete(item.id, $event)" class="btn btn-outline-secondary">刪除</a>
                                    </td>
                                </tr>

                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

    </div>
</section>


@section Scripts {
    <script>
        Vue.createApp({
            data() {
                return {
                    specialVacationList: [],
                    search: {
                        startDate: null,
                        endDate: null,
                    }
                }
            },
            computed: {
                filterDate() {
                    let data = this.specialVacationList
                    if (this.search.startDate) {
                        data = data
                            .filter(x => new Date(x.date) >= new Date(this.search.startDate))

                    }
                    if (this.search.endDate) {
                        data = data
                            .filter(x => new Date(x.date) <= new Date(this.search.endDate))
                    }
                    console.log(data)
                    return data;
                },
            },
            methods: {
                checkIsDelete(id, e) {
                    const swalWithBootstrapButtons = Swal.mixin({
                        customClass: {
                            confirmButton: "btn btn-success",
                            cancelButton: "btn btn-danger"
                        },
                        buttonsStyling: false
                    });
                    swalWithBootstrapButtons.fire({
                        title: "確定刪除?",
                        text: "此刪除可能無法回復",
                        icon: "warning",
                        showCancelButton: true,
                        confirmButtonText: "是",
                        cancelButtonText: "否",
                        reverseButtons: true
                    }).then((result) => {
                        if (result.isConfirmed) {
                            this.getOut(id, e);
                            swalWithBootstrapButtons.fire({
                                title: "成功刪除!",
                                icon: "success"
                            });
                            this.getListData();
                        } else if (
                            /* Read more about handling dismissals below */
                            result.dismiss === Swal.DismissReason.cancel
                        ) {
                            swalWithBootstrapButtons.fire({
                                title: "取消",
                                icon: "error"
                            });
                        }
                    });
                },
                getDateRangePicker() {
                    let self = this;
                    $('#dateInput').daterangepicker({
                        locale: {
                            format: 'YYYY-MM-DD'
                        }
                    }, function (start, end, _) {
                        self.search.startDate = start.format('YYYY-MM-DD');
                        self.search.endDate = end.format('YYYY-MM-DD');

                    });
                },
                edit(id, event) {
                    event.preventDefault();
                    location.href = `/BasicSetting/SpecialVacationEdit/${id}`
                },
                getOut(id, event) {
                    let self = this
                    event.preventDefault();
                    axios.post(`/api/specialvacationapi/Delete/${id}`).then((response) => {
                        if (response.status) {
                            Swal.fire({
                                icon: "success",
                                title: "刪除成功!",
                                confirmButtonText: '返回',
                                showClass: {
                                    popup: `animate__animated animate__fadeInUp animate__faster`
                                },
                                hideClass: {
                                    popup: `animate__animated animate__fadeOutDown animate__faster`
                                }
                            }).then((result) => {
                                if (result.value) {
                                    this.getListData();
                                }
                            });

                        } else {
                            Swal.fire({
                                icon: "error",
                                title: "刪除失敗!",
                                confirmButtonText: '返回',
                                showClass: {
                                    popup: `animate__animated animate__fadeInUp animate__faster`
                                },
                                hideClass: {
                                    popup: `animate__animated animate__fadeOutDown animate__faster`
                                }
                            });
                        }
                    })
                },
                getListData() {
                    let self = this;
                    axios('/api/specialvacationapi/list').then((response) => {
                        console.log(response);
                        self.specialVacationList = response.data;
                        console.log(self.specialVacationList)
                    })
                        .catch((error) => console.log(error));
                },
            },
            mounted() {
                this.getListData();
                this.getDateRangePicker();

            },
        }).mount('#app')


    </script>
}
