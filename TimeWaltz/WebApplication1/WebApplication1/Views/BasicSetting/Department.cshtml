@{
    Layout = "_Layout";
    ViewBag.title = "部門瀏覽";
}
<div class="row" id="app">
    <div class="col-12 mb-3">
        <div class="row">
            <label class="col-form-label col-auto">部門名稱查詢：</label>
            <form asp-action="Department" asp-controller="BasicSetting" method="post">
                <div class="row form-group">
                    <input name="QueryDepartment" class="form-control col-6" type="text" autocomplete="off" v-model="queryDepartmentName">
                </div>
            </form>
            <div class="col-auto ml-auto">
                <a asp-controller="BasicSetting" asp-action="DepartmentCreate" class="btn btn-outline-success pull-right">新增</a>
            </div>
        </div>
    </div>
    <div class="col-sm-8">
        <table id="example2" class="table table-bordered">
            <thead>
                <tr>
                    <th>
                        部門名稱
                    </th>
                    <th>
                        部門主管
                    </th>
                    <th scope="col">詳細資料</th>

                </tr>
            </thead>
            <tbody>
                <tr class="text-center" v-for="item in filterByDepartmentName()">
                    <td>{{item.departmentName}}</td>
                    <td>{{item.employeesName}}</td>
                    <td>
                        <a href="#" @@click="edit(item.id,$event)">檢視</a> |
                        <a href="#" @@click="checkIsDelete(item.id ,$event)">刪除</a>
                    </td>
                </tr>
                
            </tbody>

        </table>
    </div>
</div>

<script>
    function confirmDelete() {
        // 使用 confirm 函數顯示確認視窗
        var result = confirm("確定要刪除嗎?");

        // 如果用戶確定，返回 true，否則返回 false
        return result;
    }
</script>

@section Scripts {

    <script>
        Vue.createApp({
            data() {
                return {
                    id: null,
                    departmentName: null,
                    employeesName: null,
                    departmentListData: [],
                    queryDepartmentName: '',
                }
            },
            methods: {
                edit(id, event) {
                    event.preventDefault();
                    console.log(id)
                    location.href = `/BasicSetting/DepartmentEdit/${id}`
                },
                filterByDepartmentName() {
                    let self = this;
                    if (self.queryDepartmentName != '') return self.departmentListData.filter(x => x.departmentName.includes(self.queryDepartmentName));
                    return self.departmentListData;
                },
                checkIsDelete(id, e) {
                    const swalWithBootstrapButtons = Swal.mixin({
                        customClass: {
                            confirmButton: "btn btn-success",
                            cancelButton: "btn btn-danger"
                        },
                        buttonsStyling: false
                    });
                    swalWithBootstrapButtons.fire({
                        title: "確定刪除?",
                        text: "此刪除可能無法回復",
                        icon: "warning",
                        showCancelButton: true,
                        confirmButtonText: "是",
                        cancelButtonText: "否",
                        reverseButtons: true
                    }).then((result) => {
                        if (result.isConfirmed) {
                            this.getOut(id, e);
                            swalWithBootstrapButtons.fire({
                                title: "成功刪除!",
                                icon: "success"
                            });
                        } else if (
                            /* Read more about handling dismissals below */
                            result.dismiss === Swal.DismissReason.cancel
                        ) {
                            swalWithBootstrapButtons.fire({
                                title: "取消",
                                icon: "error"
                            });
                        }
                    });
                },
                getOut(id,e) {
                    e.preventDefault();
                    let self = this;
                    axios.post(`/api/DepartmentApi/Delete/${id}`)
                        .then((response) => {
                            console.log(response)
                            if (response.status) {                                
                                Swal.fire({
                                    icon: "success",
                                    title: "刪除成功!",
                                    confirmButtonText: '返回',
                                    showClass: {
                                        popup: `animate__animated animate__fadeInUp animate__faster`
                                    },
                                    hideClass: {
                                        popup: `animate__animated animate__fadeOutDown animate__faster`
                                    }
                                }).then((result) => {
                                    if (result.value) {
                                        this.getListData();
                                    }
                                });
                            }else{
                                Swal.fire({
                                    icon: "error",
                                    title: "刪除失敗!",
                                    confirmButtonText: '返回',
                                    showClass: {
                                        popup: `animate__animated animate__fadeInUp animate__faster`
                                    },
                                    hideClass: {
                                        popup: `animate__animated animate__fadeOutDown animate__faster`
                                    }
                                });
                            }
                        })
                        .then((error) => console.log(error));
                },
                getListData() {
                    let self = this;
                    axios('/api/DepartmentApi/GetListData')
                        .then((response) => {
                            console.log(response)
                            self.departmentListData = response.data;
                            self.departmentListData.employeesName = response.data.employeesName;
                            self.departmentListData.queryDepartmentName = response.data.queryDepartmentName;
                            self.departmentListData.id = response.data.id;
                        })
                        .then((error) => console.log(error));
                },
            },
            mounted() {
                this.getListData();
            },

        }).mount('#app');
    </script>
}