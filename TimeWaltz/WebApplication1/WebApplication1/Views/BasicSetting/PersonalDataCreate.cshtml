@{
    ViewData["Title"] = "新增員工個人資料";
}

<form asp-action="CreatePersonalData" asp-asp-controller="BasicSetting" method="post" id="app">
    <section class="content">
        <div class="card-body">
            <div class="form-group">
                <label class="control-label">姓名</label>
                <input class="form-control" :class="validation.name" v-model.lazy.trim="name" />
                <span class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">性別</label>
                <select class="form-control" :class="validation" v-model="gender">
                    <option v-for="item in genderSelectItems" :value="item.value">{{item.text}}</option>
                </select>
                <span class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">部門</label>
                <select class="form-control" :class="validation" v-model="departmentId">
                    <option value="">請選擇</option>
                    <option v-for="item in departmentNameSelectItem" :value="item.value">{{item.text}}</option>
                </select>
                <span class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">班別</label>
                <select class="form-control" :class="validation" v-model="shiftScheduleId">
                    <option value="">請選擇</option>
                    <option v-for="item in shiftNameSelectItems" :value="item.value">{{item.text}}</option>
                </select>
                <span class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">入職日期</label>
                <input type="date" class="form-control" id="hireDate" />
                <span class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Email</label>
                <input type="email" name="Email" class="form-control" :class="validation.email" v-model="email" />
                <div class="valid-feedback">
                    Looks good!
                </div>
                <div class="invalid-feedback">
                    Please choose a username.
                </div>
                <span class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">員工編號</label>
                <input name="EmployeesNo" class="form-control" v-model="employeesNo" />
                <span class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="button" value="新增" @@click="send" class="btn btn-primary" />
            </div>
        </div>
        <div>
            <a asp-action="PersonalData" asp-controller="BasicSetting"></a>
        </div>
    </section>
</form>
@section Scripts {
    <script>



    </script>

    <script>
        Vue.createApp({
            data() {
                return {
                    genderSelectItems: [],
                    id: null,
                    departmentNameSelectItem: [],
                    shiftNameSelectItems: [],
                    departmentId: '',
                    email: '',
                    name: '',
                    shiftScheduleId: '',
                    hireDate: this.getToday(),
                    gender: '',
                    employeesNo: '',
                    today: null,
                }
            },
            watch: {
                "form.email": {
                    handler(newVal, oldVal) {
                        this.apiTime++;
                        var exist = ["reds1210@gmail.com", "esther0908@gmail.com"];
                        this.validation.email = exist.includes(newVal) ? "is-invalid" : "is-valid";
                    },
                    immediate: false
                },
                arr(n) {
                    console.log(n);
                },
                "obj": {
                    deep: true,
                    handler(n) {
                        console.log(n);
                    }
                }
            },
            methods: {
                getToday() {
                    var now = moment();
                    var newNow = now.format("YYYY-MM-DD")
                    return newNow;
                },
                getDateTimeRangePicker() {
                    let self = this;
                    $('#hireDate').daterangepicker({
                        "startDate": self.getToday(),
                        singleDatePicker: true,
                        locale: {
                            format: 'YYYY-MM-DD'
                        }
                    }, function (start, _, _) {
                        self.hireDate = start.format("YYYY-MM-DD");
                    });
                },
                send: function () {
                    let self = this;
                    console.log(self.name, self.gender, self.departmentId, self.shiftScheduleId, self.hireDate, self.email, self.employeesNo)
                    fetch("/api/PersonalDataApi/Create", {
                        method: "POST",
                        body: JSON.stringify({
                            name: self.name,
                            email: self.email,
                            hireDate: self.hireDate,
                            gender: self.gender,
                            employeesNo: self.employeesNo,
                            departmentId: self.departmentId,
                            shiftScheduleId: self.shiftScheduleId,
                        }),
                        headers: {
                            "content-type": "application/json",
                        },
                    }).then(res => res.json()).then(result => {
                        console.log(result);
                        if (result.status == true) {
                            alert("新增成功");
                            location.href = "/BasicSetting/PersonalData"
                        } else {
                            alert("新增失敗");
                            location.href = "/BasicSetting/personalDataCreate"
                        }
                    })
                },
                getGenderDropDownList() {
                    let self = this;
                    fetch("/api/PersonalDataApi/DropDownList").then(res => res.json())
                        .then(result => {
                            console.log(result);
                            const selectItems = [{ disabled: false, group: null, selected: true, text: '請選擇', value: '' }, ...result.genderSelectItems]
                            console.log(selectItems)
                            self.genderSelectItems = selectItems;

                        })
                },
                getDepAndShfDropDownList() {
                    let self = this;
                    fetch("/api/PersonalDataApi/GetDepAndShiftDorpDownList").then(res => res.json())
                        .then(result => {
                            console.log(result);
                            self.departmentNameSelectItem = result.departmentNameSelectItem;
                            self.shiftNameSelectItems = result.shiftNameSelectItems;
                        })
                },
            },
            mounted() {
                this.getGenderDropDownList();
                this.getDepAndShfDropDownList();
                this.getDateTimeRangePicker();
            }
        }).mount("#app");
    </script>
}
