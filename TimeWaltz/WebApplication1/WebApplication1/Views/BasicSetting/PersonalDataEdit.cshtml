@{
    ViewData["Title"] = "編輯員工資料";
}

<form asp-action="SpecialVacationEdit" asp-asp-controller="BasicSetting" id="app">
    <div class="row">
        <div class="card-body">
            <div class="form-group">
                <label class="control-label">姓名</label>
                <input class="form-control col-3" :class="validation.name" v-model="name" />
                <span class="text-danger" v-if="!validation.name">姓名不得為空</span>
            </div>
            <div class="form-group">
                <label class="control-label">性別</label>
                <input type="text" class="form-control col-3" v-model="gender" disabled />
            </div>
            <div class="form-group">
                <label class="control-label">E-mail</label>
                <input type="email" class="form-control col-5" :class="validation.email" v-model="email" />
                <div class="invalid-feedback">
                    Email格式錯誤!
                </div>
            </div>
            <div class="form-group">
                <label class="control-label">到職日期</label>
                <input type="text" class="form-control col-3" v-model="hireDate" disabled />
            </div>
            <div class="form-group">
                <label class="control-label">員工編號</label>
                <input type="text" class="form-control col-3" v-model="employeesNo" disabled />
            </div>
            <div class="form-group">
                <label class="control-label">部門</label>
                <select class="form-control col-3" :class="validation.departmentId" v-model="departmentId">
                    <option v-for="item in departmentNameSelectItem" :value="item.value">{{item.text}}</option>
                </select>
                <span class="text-danger" v-if="!validation.departmentId">部門不得為空</span>
            </div>
            <div class="form-group">
                <label class="control-label">班別</label>
                <select class="form-control col-3" v-model="shiftScheduleId">
                    <option v-for="item in shiftNameSelectItems" :value="item.value">{{item.text}}</option>
                </select>
                <span class="text-danger" v-if="!validation.shiftScheduleId">班別不得為空</span>
            </div>
            <div class="card-footer">
                <input type="button" value="送出" class="btn btn-primary" @@click="validateAndSubmit(id)" />
                <a asp-controller="BasicSetting" asp-action="PersonalData" class="btn btn-outline-success">返回</a>
            </div>
        </div>
    </div>
</form>
@section Scripts {
    <script>
        Vue.createApp({
            data() {
                return {
                    id: null,
                    departmentNameSelectItem: [],
                    shiftNameSelectItems: [],
                    shiftScheduleId: null,
                    hireDate: '',
                    employeesNo: '',
                    gender: '',
                    email: '',
                    name: '',
                    validation: {
                        employeesNo: true,
                        gender: true,
                        departmentId: true,
                        email: null,
                        name: true,
                        shiftScheduleId: true,
                    },
                }
            },
            watch: {
                "email": {
                    handler(newVal, oldVal) {
                        this.validation.email = newVal.includes('@@') ? "is-valid" : "is-invalid";
                    },
                    immediate: false
                },
            },
            methods: {
                validateAndSubmit(id) {
                    let isValid = true;
                    this.validation.name = this.name == '' ? false : true;
                    this.validation.gender = this.gender == '' ? false : true;
                    this.validation.departmentId = this.departmentId == '' ? false : true;
                    this.validation.employeesNo = this.employeesNo == '' ? false : true;
                    this.validation.shiftScheduleId = this.shiftScheduleId == '' ? false : true;
                    if (this.validation.name && this.validation.gender && this.validation.departmentId && this.validation.employeesNo) {
                        this.send(id);
                    }
                },
                send(id) {
                    let self = this;
                    fetch(`/api/PersonalDataApi/Edit/${id}`, {
                        method: "POST",
                        body: JSON.stringify({
                            id: self.id,
                            name: self.name,
                            email: self.email,
                            departmentId: self.departmentId,
                            shiftScheduleId: self.shiftScheduleId,
                        }),
                        headers: {
                            "content-type": "application/json",
                        },
                    }).then(res => res.json()).then(result => {
                        console.log(result)
                        if (result.status) {
                            alert("修改成功");
                        } else {
                            alert("修改失敗");
                        }
                        location.href = `/BasicSetting/PersonalData`;
                    });
                },
                getDropDownListData() {
                    let self = this;
                    fetch("/api/PersonalDataApi/GetDepAndShiftDorpDownList").then(res => res.json()).then(result => {
                        console.log(result);
                        self.departmentNameSelectItem = result.departmentNameSelectItem;
                        self.shiftNameSelectItems = result.shiftNameSelectItems;
                    })
                },
                getEditData() {
                    let self = this;
                    fetch(`/api/PersonalDataApi/GetEditData/${this.id}`).then(res => res.json()).then(result => {
                        console.log(result);
                        self.departmentId = result.departmentId;
                        self.email = result.email;
                        self.id = result.id;
                        self.name = result.name;
                        self.hireDate = result.hireDate;
                        self.employeesNo = result.employeesNo;
                        self.gender = result.gender;
                        self.shiftScheduleId = result.shiftScheduleId;
                    });
                },
                checkId() {
                    var url = location.pathname;
                    var match = url.match(/\/(\d+)$/);

                    if (match) {
                        var lastNumber = parseInt(match[1]);
                        this.id = lastNumber;
                    } else {
                        location.href = "/BasicSetting/PersonalData";
                    }

                },
            },
            mounted() {
                this.checkId();
                this.getEditData();
                this.getDropDownListData();
            },
        }).mount('#app');
    </script>

}