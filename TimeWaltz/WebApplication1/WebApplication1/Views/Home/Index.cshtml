
<div id="callBillBoard">
    <div class="row mb-2 d-flex justify-content-around">
        <div class="col-2">
            <button @@click="toClock" class="btn btn-lg btn-block bg-danger">
                <i class="fa-regular fa-clock mr-2"></i>打卡
            </button>
        </div>

        <div class="col-2">
            <button @@click="toLeave" class="btn btn-lg btn-block bg-success">
                <i class="fa-regular fa-pen-to-square mr-2"></i>請假
            </button>
        </div>

        <div class="col-2">
            <button @@click="toOvertimeRequest" class="btn btn-lg btn-block bg-info">
                <i class="fa-regular fa-bell mr-2"></i>加班
            </button>
        </div>
    </div>

    <div class="row mx-2 my-5">
        <div id="carouselExampleCaptions" class="carousel slide" data-ride="carousel">
            <div class="carousel-inner">
                <div v-for="(item,index) in reversedItems" :key="index" :class="{ 'carousel-item': true,active: index === 0 }">
                    <template v-if=" AfterToDay(item.startTime) && BeforeToDay(item.endTime)">
                        <h5 class="text-info"><i class="fa-solid fa-bullhorn mr-2"></i>{{item.title}}</h5>
                        <p class="text-gray">
                            <span>公告時間：{{formatToDateTime(item.startTime)}}
                        </p>
                        </p>
                        <p class="text-blue" v-html="item.content"></p>
                    </template>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.6.7/axios.min.js" integrity="sha512-NQfB/bDaB8kaSXF8E77JjhHG5PM6XVRxvHzkZiwl3ddWCEPBa23T76MuWSwAJdMGJnmQqM0VeY9kFszsrBEFrQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <script>
        Vue.createApp({
            data() {
                return {
                    allBillBoard: [],
                    empId: '',
                    empName: '',
                    startTime: '',
                    endTime: '',
                    content: '',
                    title: '',
                    active: true,
                }
            },
            mounted() {
                this.getBillboardData();
                // this.getEmpId();
            },
            computed: {
                reversedItems() {
                    return this.allBillBoard.slice().reverse();
                }
            },
            methods: {
                // getEmpId() {
                //     let self = this;
                //     fetch(`/api/OvertimeApplicationsApi/GetEmoloyeeName`).then(res => res.json())
                //         .then(result => {
                //             self.empName = result.employeeName;
                //         })
                // },
                getBillboardData() {
                    let self = this;
                    axios("/api/BillboardApi/GetBillboardList").then(response => {
                        console.log(response);
                        self.allBillBoard = response.data;
                        self.empId = response.data.employeesID;
                        self.startTime = response.data.startTime;
                        self.endTime = response.data.endTime;
                        self.content = response.data.content;
                        self.title = response.data.title;
                    });
                },
                formatToDateTime(dateTimeString) {
                    const options = {
                        year: 'numeric',
                        month: '2-digit',
                        day: '2-digit',
                        hour: '2-digit',
                        minute: '2-digit',
                        hour12: false,
                    };
                    const dateTime = new Date(dateTimeString);
                    return dateTime.toLocaleTimeString('zh', options).replaceAll('/', '-');
                },
                toClock() {
                    location.href = "/PersonalRecord/Clock";
                },
                toLeave() {
                    location.href = "/PersonalRecord/LeaveCreate";
                },
                toOvertimeRequest() {
                    location.href = "/ApplicationForm/OvertimeRequestCreate";
                },
                AfterToDay(date) {
                    const queryDate = new Date(date).toISOString();
                    const today = new Date().toISOString();
                    return queryDate < today;
                },
                BeforeToDay(date) {
                    const queryDate = new Date(date).toISOString();
                    const today = new Date().toISOString();
                    var result = queryDate > today;
                    // console.log(queryDate);
                    // console.log(today);
                    // console.log(result);
                    return queryDate > today;
                }
            },
        }).mount("#callBillBoard");

    </script>
}
